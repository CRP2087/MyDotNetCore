@model IEnumerable<MyPortfolio.Models.Stock>

@{
    ViewData["Title"] = "My Portfolio";
}

<div class="container mt-4 table-responsive">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>📈My Stock Portfolio</h2>
        <a asp-action="Create" class="btn btn-success">➕ Add New Stock</a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">No stocks found. Click "Add New Stock" to get started!</div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Symbol</th>
                    <th>Company</th>
                    <th>Quantity</th>
                    <th>Buy Price</th>
                    <th>Buy Date</th>
                    <th>Current-Price</th>
                    <th>Profit-Loss</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var stock in Model)
                {
                    var pnl = (stock.CurrentPrice - stock.BuyPrice) * stock.Quantity;
                    <tr data-symbol="@stock.Symbol">
                        <td>@stock.Symbol</td>
                        <td>@stock.CompanyName</td>
                        <td>@stock.Quantity</td>
                        <td>₹@stock.BuyPrice.ToString("F2")</td>
                        <td>@stock.BuyDate.ToShortDateString()</td>
                        <td class="current-price">
                            @if (stock.CurrentPrice.HasValue)
                            {
                                @:₹@stock.CurrentPrice.Value.ToString("F2")
                            }
                            else
                            {
                                @:N/A
                            }
                        </td>
                        <td class="profit-loss fw-bold @(pnl >= 0 ? "text-success" : "text-danger")">
                            ₹@(pnl.HasValue ? pnl.Value.ToString("F2") : "N/A")
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@stock.Id" class="btn btn-sm btn-primary me-2"><i class="bi bi-pencil-square"></i>Edit</a>
                            <a asp-action="Delete" asp-route-id="@stock.Id" class="btn btn-sm btn-danger"><i class="bi bi-trash"></i>Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
<script>
    async function updatePrices() {
        const response = await fetch('/Stock/GetLatestPrices');
        const data = await response.json();

        data.forEach(stock => {
            const row = Array.from(document.querySelectorAll('tr[data-symbol]'))
                .find(tr => tr.getAttribute('data-symbol').toLowerCase() === stock.symbol.toLowerCase());
            if (row) {
                row.querySelector('.current-price').innerText = '₹' + stock.currentPrice.toFixed(2);
                row.querySelector('.profit-loss').innerText = '₹' + stock.profitLoss.toFixed(2);
            }
        });
    }

    setInterval(updatePrices, 3000); // every 30 seconds
    updatePrices(); // call immediately on load
</script>

